- name: Check if homebrew is available
  block:
    - name: try using homebrew in check_mode (no changes)
      homebrew:
        update_homebrew: true
      check_mode: true

  rescue:
    - name: No homebrew
      fail:
        msg: Homebrew is missing, install from web

- name: Reset the Homebrew Library repo
  git:
    repo=https://github.com/Homebrew/brew.git
    dest=/usr/local/Homebrew/Library
    clone=no
    update=yes
    force=yes

- name: Update Homebrew (first try may fail)
  homebrew: update_homebrew=yes
  become: no
  ignore_errors: yes

- name: Update Homebrew
  homebrew: update_homebrew=yes
  become: no

- name: Install global python packages
  ansible.builtin.pip:
    name:
      - black
      - jedi-language-server
      - flake8
      - flake8-isort
      - isort
      - pynvim
    extra_args: "-U"

- name: Install brew packages
  homebrew:
    name:
      - mas
      - tmux
      - lf
      - neovim
    state: present

- name: Install Mac Apps
  community.general.mas:
    id:
      - 732710998  # enpass
    state: present

- name: Create .config directory if it does not exist
  ansible.builtin.file:
    path: "{{ homedir }}/.config"
    state: directory
    mode: '0755'

- name: Create .config/nvim directory if it does not exist
  ansible.builtin.file:
    path: "{{ homedir }}/.config/nvim"
    state: directory
    mode: '0755'

- name: Copy nvim Lua config
  copy:
    src: "{{ role_path }}/files/nvim/init.lua"
    dest: "{{ homedir }}/.config/nvim/init.lua"
    owner: "{{ username }}"
    group: staff

- name: Check if nvim conf exists
  stat:
    path: "{{ homedir }}/.config/nvim"
  register: nvimconf

- name: Check if nvim colors exists
  stat:
    path: "{{ homedir }}/.config/nvim/colors/molokai.vim"
  register: nvimcolors

- name: Copy nvim confs
  copy:
    src: "{{ role_path }}/files/vim/"
    dest: "{{ homedir }}/.config/nvim"
    owner: "{{ username }}"
    group: staff
  when: not nvimcolors.stat.exists

- name: Copy /opt
  copy:
    src: "{{ role_path }}/files/opt"
    dest: "{{ homedir }}/"
    owner: "{{ username }}"
    group: staff
    mode: u+x

- name: Check if pyenv conf exists
  stat:
    path: "{{ homedir }}/.pyenv"
  register: pyenvconf

- name: Install pyenv
  git:
    repo: https://github.com/pyenv/pyenv.git
    dest: "{{ homedir }}/.pyenv"
    update: no
  when: not pyenvconf.stat.exists

- name: Install pyenv-virtualenv
  git:
    repo: https://github.com/pyenv/pyenv-virtualenv.git
    dest: "{{ homedir }}/.pyenv/plugins/pyenv-virtualenv"
    update: no
  when: not pyenvconf.stat.exists

- name: Install oh-my-zsh
  shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  args:
    creates: "{{ homedir }}/.oh-my-zsh"

- name: Copy zshrc
  copy:
    src: "{{ role_path }}/files/zshrc"
    dest: "{{ homedir }}/.zshrc"
    owner: "{{ username }}"
    group: staff
