IS_NIXOS=$(grep NAME\=NixOS /etc/os-release)
IS_MACOS=$(uname | grep Darwin)
export ZSH="$HOME/.oh-my-zsh"

ZSH_THEME="rkj-repos"
CASE_SENSITIVE="true"
HYPHEN_INSENSITIVE="true"
DISABLE_UNTRACKED_FILES_DIRTY="true"

zstyle ':omz:update' mode auto      # update automatically without asking

export EDITOR=nvim
export GIT_SSL_NO_VERIFY=true
export ZSH_TMUX_AUTOSTART=true

if [[ $IS_NIXOS ]]; then
    touch ~/.zshrc
    export NIX_BUILD_SHELL=nix-zshell
else
    if [[ $IS_MACOS ]]; then
        eval $(/opt/homebrew/bin/brew shellenv)
    fi
    export PATH=$PATH:/sbin
    export PATH=$PATH:$HOME/opt/bin
    export PATH="$PYENV_ROOT/bin:$PATH"
    pythonUserBaseDir=$(python3 -m site --user-base);
    pythonUserBaseBinDir="$pythonUserBaseDir/bin"
    export PATH="$pythonUserBaseBinDir:$PATH"
    unset pythonUserBaseDir;
    unset pythonUserBaseBinDir;
    export PYENV_VIRTUALENV_DISABLE_PROMPT=1
    export PYENV_ROOT="$HOME/.pyenv"
    if [[ ! -n $IN_DOCKER_SHELL ]]; then
        eval `keychain --eval --agents ssh id_rsa`
        eval `keychain --eval --agents ssh id_ed25519`
    fi
    eval "$(pyenv init --path)"
    if command -v pyenv 1>/dev/null 2>&1; then
        eval "$(pyenv init -)"
        if [[ ! -n $IN_DOCKER_SHELL ]]; then
            eval "$(pyenv virtualenv-init -)"
        fi
    fi
    source $ZSH/oh-my-zsh.sh
    alias pipu="pip install --upgrade --upgrade-strategy only-if-needed"
fi

if [[ -n "$IN_NIX_SHELL" || -n $IN_DOCKER_SHELL ]]; then
    plugins=(git)
    if [[ -n "$IN_DOCKER_SHELL" ]]; then
        HOST_ALIAS="docker container"
    fi
    if [[ -n "$IN_NIX_SHELL" ]]; then
        HOST_ALIAS="nix-shell"
    fi
    # copypasta from the rkj-repos zsh theme
    PROMPT=$'%{$fg_bold[blue]%}┌─[%{$fg_bold[green]%}%n%b%{$fg[black]%}@%{$fg[cyan]%}'${HOST_ALIAS}'%{$fg_bold[blue]%}]%{$reset_color%} - %{$fg_bold[blue]%}[%{$fg_bold[default]%}%~%{$fg_bold[blue]%}]%{$reset_color%} - %{$fg_bold[blue]%}[%b%{$fg[yellow]%}'%D{"%Y-%m-%d %I:%M:%S"}%b$'%{$fg_bold[blue]%}]
    %{$fg_bold[blue]%}└─[%{$fg_bold[magenta]%}%?$(retcode)%{$fg_bold[blue]%}] <$(mygit)$(hg_prompt_info)>%{$reset_color%} '
    PS2=$' \e[0;34m%}%B>%{\e[0m%}%b '
else
    plugins=(git tmux)
    if [[ ! -e "${HOME}/.zplug/init.zsh" ]]; then
        curl -sL --proto-redir -all,https \
            https://raw.githubusercontent.com/zplug/installer/master/installer.zsh \
            | zsh
    fi
    source "${HOME}/.zplug/init.zsh"

    zplug "zsh-users/zsh-autosuggestions"
    zplug "zsh-users/zsh-completions"
    zplug "zsh-users/zsh-history-substring-search"
    zplug "agkozak/zsh-z"

    if ! zplug check --verbose; then
        printf "Install? [y/N]: "
        if read -q; then
            echo; zplug install
        fi
    fi
    zplug load
fi
