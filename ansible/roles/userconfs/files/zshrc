IS_NIXOS=$(grep NAME\=NixOS /etc/os-release)
IS_MACOS=$(uname | grep Darwin)
export ZSH="$HOME/.oh-my-zsh"

if [[ $IS_MACOS ]]; then
    eval $(/opt/homebrew/bin/brew shellenv)
fi

ZSH_THEME="rkj-repos"
CASE_SENSITIVE="true"
HYPHEN_INSENSITIVE="true"
DISABLE_UNTRACKED_FILES_DIRTY="true"

zstyle ':omz:update' mode auto      # update automatically without asking

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

plugins=(git tmux)

## Plugin Manager
# check if zplug is not installed, then init!
if [[ ! -e "${HOME}/.zplug/init.zsh" ]]; then
    curl -sL --proto-redir -all,https \
        https://raw.githubusercontent.com/zplug/installer/master/installer.zsh \
        | zsh
fi
source "${HOME}/.zplug/init.zsh"

# https://www.github.com/zsh-users/zsh-autosuggestions
# Fish-like fast/unobtrusive autosuggestions for zsh. When you type a command a
# second time it shows up but is shaded, use the right arrow to fully complete
# the command
zplug "zsh-users/zsh-autosuggestions"

# https://www.github.com/zsh-users/zsh-completions
# Additional completions for common command line tools
zplug "zsh-users/zsh-completions"

# You can type the beginning of a command and then use arrow keys to filter
# previous commands in your history that share the same beginning
# https://www.github.com/zsh-users/zsh-history-substring-search
zplug "zsh-users/zsh-history-substring-search"

# Quick changing directories, z is a command line tool that allows you to jump
# quickly to directories that you have visited frequently in the past, or

zplug "agkozak/zsh-z"

# https://www.github.com/zsh-users/zsh-syntax-highlighting
# Fish shell-like syntax highlighting for Zsh.
# zplug "zsh-users/zsh-syntax-highlighting"

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

# Then, source plugins and add commands to $PATH
# Remove --verbose if you find the startup message annoying
zplug load # --verbose

export EDITOR=nvim
export GIT_SSL_NO_VERIFY=true
export ZSH_TMUX_AUTOSTART=true

if [[ ! $IS_NIXOS ]]; then
    export PATH=$PATH:/sbin
    export PATH=$PATH:$HOME/opt/bin
    export PATH="$PYENV_ROOT/bin:$PATH"
    pythonUserBaseDir=$(python3 -m site --user-base);
    pythonUserBaseBinDir="$pythonUserBaseDir/bin"
    export PATH="$pythonUserBaseBinDir:$PATH"
    unset pythonUserBaseDir;
    unset pythonUserBaseBinDir;
    export PYENV_VIRTUALENV_DISABLE_PROMPT=1
    export PYENV_ROOT="$HOME/.pyenv"
    eval `keychain --eval --agents ssh id_rsa`
    eval `keychain --eval --agents ssh id_ed25519`
    eval "$(pyenv init --path)"
    if command -v pyenv 1>/dev/null 2>&1; then
        eval "$(pyenv init -)"
        eval "$(pyenv virtualenv-init -)"
    fi
fi

if [[ $IS_NIXOS ]]; then
    touch ~/.zshrc
    export NIX_BUILD_SHELL=nix-zshell
fi

if [[ ! $IS_NIXOS ]]; then
    source $ZSH/oh-my-zsh.sh
    alias pipu="pip install --upgrade --upgrade-strategy only-if-needed"
fi

if [[ -n "$IN_NIX_SHELL" ]]; then
    # copypasta from the rkj-repos zsh theme
    PROMPT=$'%{$fg_bold[blue]%}┌─[%{$fg_bold[green]%}%n%b%{$fg[black]%}@%{$fg[cyan]%}nix-shell%{$fg_bold[blue]%}]%{$reset_color%} - %{$fg_bold[blue]%}[%{$fg_bold[default]%}%~%{$fg_bold[blue]%}]%{$reset_color%} - %{$fg_bold[blue]%}[%b%{$fg[yellow]%}'%D{"%Y-%m-%d %I:%M:%S"}%b$'%{$fg_bold[blue]%}]
    %{$fg_bold[blue]%}└─[%{$fg_bold[magenta]%}%?$(retcode)%{$fg_bold[blue]%}] <$(mygit)$(hg_prompt_info)>%{$reset_color%} '
    PS2=$' \e[0;34m%}%B>%{\e[0m%}%b '
fi

